//load module 7 (boot module)
loadi(54,67);
loadi(55,68);

//load module 8 (access control module)
loadi(132,516);
loadi(133,517);

//load idle
loadi(69,11);
//loadi(70,12);

//load secondary boot loader
loadi(128,512);

SP = 512*82 - 1;

call BOOT_MODULE;


//IDLE initialization
PTBR = PAGE_TABLE_BASE;
PTLR = 10;

[PTBR+0] = -1;
[PTBR+1] = "0000";  // Ref Valid Write Dirty
[PTBR+2] = -1;
[PTBR+3] = "0000";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[PROCESS_TABLE + 0] = 0;
[PROCESS_TABLE + 1] = 0;
[PROCESS_TABLE + 3] = 0;  //kernel
[PROCESS_TABLE + 4] = RUNNING;
[PROCESS_TABLE + 11] = 76;
[PROCESS_TABLE + 12] = 0;
[PROCESS_TABLE + 13] = 8*512;
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;

[SYSTEM_STATUS_TABLE + 1] = 0;
[70*512] = [69*512 + 1];

//SWAPPER DAEMON initialization
PTBR = PAGE_TABLE_BASE + 15*20;

[PTBR+0] = -1;
[PTBR+1] = "0000";  // Ref Valid Write Dirty
[PTBR+2] = -1;
[PTBR+3] = "0000";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 69;  //same as idle
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 81;  //huh
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

R0 = PROCESS_TABLE + 15*16;
[R0 + 0] = 0;
[R0 + 1] = 15;
[R0 + 3] = 0;  //kernel
[R0 + 4] = CREATED;
[R0 + 11] = 82;  //huh
[R0 + 12] = 0;
[R0 + 13] = 8*512;
[R0 + 14] = PAGE_TABLE_BASE + 15*20;
[R0 + 15] = 10;

[81*512] = [69*512 + 1];

PTBR = PAGE_TABLE_BASE;
PTLR = 10;
SP = 8*512;

start;
breakpoint;
ireturn;
