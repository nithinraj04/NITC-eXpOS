//load library
loadi(63,13);
loadi(64,14);

//load init
loadi(65,7);
loadi(66,8);

//load int7
loadi(16,29);
loadi(17,30);

//load int10
loadi(22,35);
loadi(23,36);

//load exception
loadi(2,15);
loadi(3,16);

//load timer
loadi(4,17);
loadi(5,18);

//Initialize page table for init

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

[PTBR+20+0] = 63;
[PTBR+20+1] = "0100";
[PTBR+20+2] = 64;
[PTBR+20+3] = "0100";

[PTBR+20+4] = 78;
[PTBR+20+5] = "0110";
[PTBR+20+6] = 79;
[PTBR+20+7] = "0110";

[PTBR+20+8] = 65;
[PTBR+20+9] = "0100";
[PTBR+20+10] = 66;
[PTBR+20+11] = "0100";
[PTBR+20+12] = -1;
[PTBR+20+13] = "0000";
[PTBR+20+14] = -1;
[PTBR+20+15] = "0000";

[PTBR+20+16] = 76;
[PTBR+20+17] = "0110";
[PTBR+20+18] = 77;
[PTBR+20+19] = "0110";

//Process table entries for init
[PROCESS_TABLE+16+1] = 1;
[PROCESS_TABLE+16+4] = CREATED;
[PROCESS_TABLE+16+11] = 80; //User area
[PROCESS_TABLE+16+12] = 0; //kernel stack (offset)
[PROCESS_TABLE+16+13] = 8*512;  //user stack
[PROCESS_TABLE+16+14] = PAGE_TABLE_BASE+20; //PTBR
[PROCESS_TABLE+16+15] = 10; //PTLR

[76*512] = [65*512 + 1];
return;
