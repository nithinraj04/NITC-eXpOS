alias ret_val R0;
alias fn_num R1;
alias pid R2;

if(fn_num == 2) then //Free user area page
    alias page_num R3;
    page_num = [PROCESS_TABLE + 16*pid + 11];
    multipush(R0, R1, R2, R3);
    R1 = 2; //Release page
    R2 = page_num;
    call MEMORY_MANAGER;
    multipop(R0, R1, R2, R3);
    return;
endif;

if(fn_num == 3) then //Exit process
    multipush(R0, R1, R2);
    R1 = 4; //Free page table
    R2 = pid;
    call PROCESS_MANAGER;
    multipop(R0, R1, R2);

    multipush(R0, R1, R2);
    R1 = 2; //Free user area page
    R2 = pid;
    breakpoint;
    call PROCESS_MANAGER;
    multipop(R0, R1, R2);

    [PROCESS_TABLE + 16*pid + 4] = TERMINATED;

    return;
endif;

if(fn_num == 4) then //Free page table
    alias ptbr R3;
    ptbr = [PROCESS_TABLE + 16*pid + 14];
    [ptbr + 0] = -1;
    [ptbr + 1] = "0000";
    [ptbr + 2] = -1;
    [ptbr + 3] = "0000";

    R4 = 4;

    while(R4 < 20) do
        if([ptbr + R4 + 1] != "0000") then
            multipush(R0, R1, R2, R3, R4);
            R1 = 2; //release page
            R2 = [ptbr + R4 + 0];
            call MEMORY_MANAGER;
            multipop(R0, R1, R2, R3, R4);

            [ptbr + R4 + 0] = -1;
            [ptbr + R4 + 1] = "0000";
        endif;

        R4 = R4 + 2;
    endwhile;

    return;
endif;
